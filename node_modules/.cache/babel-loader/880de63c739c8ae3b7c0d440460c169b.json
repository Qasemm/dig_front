{"ast":null,"code":"var _jsxFileName = \"/Users/ahmdhsynalahmd/Desktop/digimon/client/src/components/Home.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Card, Button } from \"react-bootstrap/\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      try {\n        const alldataAPI = await axios.get(`http://localhost:8000/`);\n        const finalGetData = alldataAPI.data;\n        console.log(finalGetData);\n        this.setState({\n          digimonData: finalGetData,\n          show: true\n        });\n      } catch {\n        console.log(\"Ooops don't have data\");\n      }\n    };\n\n    this.createDigimonFAV = async (e, item) => {\n      e.preventDefault();\n      const dataForSend = {\n        name: item.name,\n        img: item.img,\n        level: item.level\n      };\n      await axios.post(`http://localhost:8000/`, dataForSend);\n    };\n\n    this.state = {\n      digimonData: [],\n      show: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.state.show && this.state.digimonData.map((item, idx) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            xs: 1,\n            md: 2,\n            className: \"g-4\",\n            children: Array.from({\n              length: 4\n            }).map((_, idx) => /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                style: {\n                  width: \"18rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  variant: \"top\",\n                  src: item.img\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: \"Card Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: e => this.createDigimonFAV(e, item),\n                    variant: \"primary\",\n                    children: \"Add to FAV\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 41\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false);\n  }\n\n}\nexport default Home;","map":{"version":3,"sources":["/Users/ahmdhsynalahmd/Desktop/digimon/client/src/components/Home.js"],"names":["React","Component","axios","Card","Button","Home","constructor","props","componentDidMount","alldataAPI","get","finalGetData","data","console","log","setState","digimonData","show","createDigimonFAV","e","item","preventDefault","dataForSend","name","img","level","post","state","render","map","idx","Array","from","length","_","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Card, Button } from \"react-bootstrap/\";\nexport class Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            digimonData: [],\n            show: false,\n        };\n    }\n\n    componentDidMount = async () => {\n        try {\n            const alldataAPI = await axios.get(`http://localhost:8000/`);\n            const finalGetData = alldataAPI.data;\n            console.log(finalGetData);\n            this.setState({\n                digimonData: finalGetData,\n                show: true,\n            });\n        } catch {\n            console.log(\"Ooops don't have data\");\n        }\n    };\n\n    createDigimonFAV = async (e, item) => {\n        e.preventDefault();\n\n        const dataForSend = {\n            name: item.name,\n            img: item.img,\n            level: item.level,\n        };\n        await axios.post(`http://localhost:8000/`, dataForSend);\n    };\n\n    render() {\n        return (\n            <>\n                {this.state.show &&\n                    this.state.digimonData.map((item, idx) => {\n                        return (\n                            <>\n                                <Row xs={1} md={2} className=\"g-4\">\n                                    {Array.from({ length: 4 }).map((_, idx) => (\n                                    <Col>\n                                        <Card key={idx} style={{ width: \"18rem\" }}>\n                                        <Card.Img variant=\"top\" src={item.img} />\n                                        <Card.Body>\n                                            <Card.Title>Card Title</Card.Title>\n                                            <Card.Text>\n                                                                            Some quick example text to build on the card title and\n                                                                            make up the bulk of the card's content.\n                                            </Card.Text>\n                                            <Button\n                                            onClick={(e) => this.createDigimonFAV(e, item)}\n                                            variant=\"primary\"\n                                            >\n                                                                            Add to FAV\n                                            </Button>\n                                        </Card.Body>\n                                        </Card>\n                              </Col>\n  ))}\n                            </Row>\n              </>\n        );\n    })\n}\n      </>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}